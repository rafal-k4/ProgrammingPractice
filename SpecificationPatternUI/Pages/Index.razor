@page "/"
@using SpecificationPatternLogic
@using Microsoft.EntityFrameworkCore
@using SpecificationPatternLogic.Entities
@inject IMoviesRepository moviesRepository;

<div></div>

<input type="checkbox" id="forKidsOnly" @bind="isForKidsOnly"/>
<label class="mr-3" for="forKidsOnly"> Movies For Kids only </label>

<input type="checkbox" id="cdAvailable" @bind="isCdAvailable"/>
<label class="mr-3" for="cdAvailable"> CD Available </label>

<input type="number" id="minRating" @bind="minRating" style="width: 50px;"/>
<label class="mr-2" for="minRating"> Minimum Rating </label>

<button class="btn btn-primary" @onclick="SearchMovies">Search Movies</button>

<table class="table my-3">
    <thead class="table-primary">
        <tr>
            <td>ID</td>
            <td>Name</td>
            <td>ReleaseDate</td>
            <td>Genre</td>
            <td>MpaaRating</td>
            <td>Rating</td>
            <td>Director Name</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var movie in movies)
        {
        <tr>
            <td>@movie.MovieId</td>
            <td>@movie.Name</td>
            <td>@movie.ReleaseDate</td>
            <td>@movie.Genre</td>
            <td>@movie.MpaaRating</td>
            <td>@movie.Rating</td>
            <td>@movie.Director.Name</td>
        </tr>
        }
    </tbody>
</table>

@code {
    bool isForKidsOnly = false;
    bool isCdAvailable = false;
    int minRating = 0;

    IEnumerable<Movie> movies;

    protected override Task OnInitializedAsync()
    {
        movies = moviesRepository.GetMovies(isForKidsOnly, isCdAvailable, minRating);
        return base.OnInitializedAsync();
    }

    private void SearchMovies()
    {
        movies = moviesRepository.GetMovies(isForKidsOnly, isCdAvailable, minRating);
    }
}